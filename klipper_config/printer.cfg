
## Voron Design VORON 0.2 FYSETC BULLANT V1.0 config
## For more info
## https://github.com/FYSETC/FYSETC_Bullant_V1.0
## https://wiki.fysetc.com/FYSETC_Bullant_V1.0/

# This file contains common pin mappings for the FYSETC BULLANT V1.0.
# To use this config, the firmware should be compiled for the
# RP2040 with "No bootloader" and Communication interface USB

# How to get in upload mode:
# 1. hold BOOT button for 2 seconds
# 2. Hold RST button for 2 seconds
# 3. Release the BOOT button
# 4. wait 2seconds
# 5. Release the RST button
# "lsusb" check if get in DFU mode

# After entered upload mode, run the following command compile and 
# flash the board:
# make flash FLASH_DEVICE=2e8a:0003

## For config reference                                                              
## check https://docs.vorondesign.com/build/startup/#v0
## And see https://www.klipper3d.org/Config_Reference.html for a description of the parameters.

[include mainsail.cfg]

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
# Obtain definition by "ls -l /dev/serial/by-path/" (default)
#####################################################################
serial: /dev/serial/by-path/platform-4101000.usb-usb-0:1.1:1.0
restart_method: command

[virtual_sdcard]
path: /home/bullant/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: corexy
max_velocity: 350
max_accel: 4000
max_z_velocity: 50
max_z_accel: 350
square_corner_velocity: 10

#####################################################################
#      Temperature of HOST & MCU
#####################################################################

# Onboard RP2040 temperature
[temperature_sensor main_mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

# Onboard HOST R329
# [temperature_sensor host]
# sensor_type: temperature_host
# min_temp: 0
# max_temp: 100

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: gpio16
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !gpio15                                                      # Check motor direction in link above. If inverted, remove ! before PC13
enable_pin: !gpio14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9 degree stepper motor, 200 is for 1.8 degree stepper motors
#endstop_pin: ^gpio12
#endstop_pin: ^head:PB6  #(pin of STM32 on M36 board IO_12-1.3.3V)
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio9
uart_address: 3
interpolate: False
run_current: 0.7
hold_current: 0.2
sense_resistor: 0.220
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio12                                                   # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 100                                               # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: gpio3
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !gpio2                                                       # Check motor direction in link above. If inverted, remove ! before PC1
enable_pin: !gpio4
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9�?degree stepper motor, 200 is for 1.8�?stepper motors
#endstop_pin: ^gpio11
#endstop_pin: ^head:PB7  #(pin of STM32 on M36 board IO_12-2,3.3V)
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio8
uart_address: 3
interpolate: False
run_current: 0.7
hold_current: 0.2
sense_resistor: 0.220
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio11                                                      # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 100                                                 # This is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: gpio18                                                   # Remove the ! before PB8 if motor direction is inverted.
enable_pin: !gpio17
rotation_distance: 8                                              # For T8x8 lead screw                                            # For T8x2 lead screw
microsteps: 32
endstop_pin: gpio13
position_endstop: 105
position_max: 110
position_min: -1.5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2208 stepper_z]                                               # GC6609
uart_pin: gpio24
interpolate: False
run_current: 0.4
hold_current: 0.2
sense_resistor: 0.220
stealthchop_threshold: 0                                          # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################

# Extruder is config in the head.cfg file,add [include head.cfg] to use

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio23
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: gpio26
smooth_time: 3.0
#max_power: 0.6                                                      # Only needed for 100w pads
min_temp: 0
max_temp: 120
control: pid                                                         # Do PID calibration after initial checks
pid_kp: 68.453
pid_ki: 2.749
pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################

# https://www.klipper3d.org/Config_Reference.html#temperature_fan
# fan speed control based on the HOST R329 temperature, used to cool down the heating components of the board.
[temperature_fan board_fan]
pin: gpio20
sensor_type: temperature_host
min_temp: 0
max_temp: 100
min_speed: 0.3
max_speed: 1.0
shutdown_speed: 0.0
kick_start_time: 0.5
cycle_time:0.10
off_below:0.10
control:watermark
target_temp: 40.0
gcode_id: host

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position: 120,120                                           # these coordinates must NOT be greater than the values specified in "position_max:" for the X and Y steppers
speed: 50.0
z_hop: 5


# Tool to help adjust bed leveling screws. One may define a
# [bed_screws] config section to enable a BED_SCREWS_ADJUST g-code
# command.
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

#####################################################################
# Neopixel
#####################################################################

[neopixel board_rgb]
pin: gpio29
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

#####################################################################
#   V0 Display
####################################################################

[display]
lcd_type: sh1106
i2c_bus: i2c0a
# Set the direction of the encoder wheel
#   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^!gpio6, ^!gpio5
#   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
#encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!gpio7
kill_pin: ^!gpio22
x_offset: 2
# #   Use X offset to shift the display towards the right. Value can be 0 to 3
vcomh: 31
# #   Set the Vcomh value on SSD1306/SH1106 displays. This value is
# #   associated with a "smearing" effect on some OLED displays. The
# #   value may range from 0 to 63. Default is 0.
# #   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

[neopixel displayStatus]
pin: gpio10
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.0
initial_BLUE: 0.0

#####################################################################
# Macros
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    G28                            ; home all axes
    G90                            ; absolute positioning    
    G1 Z20 F3000                   ; move nozzle away from bed
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:

    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning                      





    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute




## M36 HUB V1.1 Lite （with GC6609）
## For more info 
## https://github.com/FYSETC/M36_HUB_V1
## https://wiki.fysetc.com/M36_HUB_V1/

# This file contains common pin mappings for the Fysetc M36 HUB V1.1
# To use this config, the firmware should be compiled for the
# STM32F072 with "No bootloader" ,"Internal clock" and Communication interface USB

# How to get in DFU mode:
# 1. hold BT0 button for 2 seconds
# 2. Hold RST button for 2 seconds
# 3. Release the BT0 button
# 4. wait 2seconds
# 5. Release the RST button
# "lsusb" check if get in DFU mode

# After running "make", run the following command to flash the board:
# "dfu-util -R -a 0 -s 0x08000000:leave -D out/klipper.bin" to upload
# or "make flash FLASH_DEVICE=0483:df11" compile and upload at once.


## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2208 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section

## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0
## See docs/Config_Reference.md for a description of parameters.

[mcu head]
serial: /dev/serial/by-path/platform-4101000.usb-usb-0:1.4:1.0
#restart_method: command


#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: head:PB15
dir_pin: !head:PB14	                # Add ! if moving opposite direction
enable_pin: !head:PB1
full_steps_per_rotation: 200    # Set to 200 for 1.8 degree motor, set to 400 for 0.9 degree stepper motor
rotation_distance: 22.23        # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10               # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: head:PA0
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: head:PA1
control: pid            # Do PID calibration
pid_Kp: 28.182
pid_Ki: 1.978
pid_Kd: 100.397
min_temp: 0
max_temp: 270
min_extrude_temp: 10  # set 10 to test,please change to 170 for real use
max_extrude_only_distance: 150
max_extrude_cross_section: 1.5
pressure_advance: 0.0   # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: head:PA9
interpolate: False
run_current: 0.7
diag_pin: head:PA8   
sense_resistor: 0.220
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder


#####################################################################
# Fan Control
#####################################################################
#FAN0_EN:PB11
#FAN0_PWM:PB10
#FAN0_TACH:PB12

#FAN1_EN:PB4
#FAN1_PWM:PA15
#FAN1_TACH:PB3

#FAN2_EN:PB9
#FAN2_PWM:PB8
#FAN2_TACH:PA10

[heater_fan hotend_fan]
pin:head:PB4
max_power:1.0
shutdown_speed:0.0
cycle_time:0.5
hardware_pwm:false
kick_start_time:0.10
off_below:0.1
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[multi_pin part_cooling]
pins: head:PB9,head:PB11

[fan]
pin: multi_pin:part_cooling

#####################################################################
# Temperature Sensor
#####################################################################

[temperature_sensor head_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: head
min_temp: 0
max_temp: 100

[temperature_sensor Chamber_on_M36]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: head:PA2
min_temp: 0
max_temp: 100

#####################################################################
# Neopixel
#####################################################################

[neopixel left_rgb]     
pin: head:PB13
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

[neopixel right_rgb]
pin: head:PB0
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

# If you want the LEDs on both sides to be synchronized, you can also use multi_pin to configure it.
# [multi_pin rgb]
# pins: head:PB0,head:PB13
# [neopixel rgb]
# pin: multi_pin:RGB
# chain_count: 1
# color_order: GRB
# initial_RED: 0.9
# initial_GREEN: 0.9
# initial_BLUE: 0.9

#####################################################################
#   ADXL345
#####################################################################

[adxl345]
cs_pin: head:PA4
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
spi_bus: spi1
#spi_software_sclk_pin:PA5
#spi_software_mosi_pin:PA7
#spi_software_miso_pin:PA6
#   See the "common SPI settings" section for a description of the
#   above parameters.
axes_map: -x, z, y
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 75  # default is 75
probe_points:
    60, 60, 20  # an example

[input_shaper]
shaper_freq_x: 66
shaper_type_x: ei
shaper_freq_y: 70.8
shaper_type_y: mzv

[menu __main __octoprint]
type: disabled


